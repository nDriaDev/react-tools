import{r as s,j as t}from"./index-LfmzCjXr.js";const x=(e,o=!1)=>{const n=s.useRef(e instanceof Function?e():e),[,m]=s.useReducer(c=>c+1,0),d=s.useRef(c=>{let u={};if(!o)u=c;else{const a=Reflect.ownKeys(c);for(const r of a)u[r]=n.current[r]instanceof Date||n.current[r]instanceof RegExp||Array.isArray(n.current[r])||typeof n.current[r]!="object"?n.current[r]:d.current(n.current[r])}return new Proxy(u,{set(a,r,i,l){return Reflect.set(a,r,i,l),m(),!0}})});return s.useRef(d.current(n.current)).current},p=s.memo(({state:e,onClick:o})=>t.jsxs(t.Fragment,{children:[t.jsxs("p",{children:["Num value is: ",e]}),t.jsx("button",{onClick:o,type:"button",children:"Increment"})]})),y=s.memo(({state:e,onClick:o})=>t.jsxs(t.Fragment,{children:[t.jsxs("p",{children:["Random value is: ",e]}),t.jsx("button",{onClick:o,type:"button",children:"Change random"})]})),f=()=>{const e=x({num:0,nested:{random:""}},!0),o=s.useCallback(()=>e.num++,[e.num]),n=s.useCallback(()=>e.nested.random=Math.random().toFixed(2),[e.nested]);return t.jsxs("div",{children:[t.jsxs("p",{children:["Current Value (in the proxy state): ",e.num,"  -  random: ",e.nested.random]}),t.jsx(p,{state:e.num,onClick:o}),t.jsx(y,{state:e.nested.random,onClick:n})]})};f.displayName="UseProxyState";export{f as UseProxyState};
