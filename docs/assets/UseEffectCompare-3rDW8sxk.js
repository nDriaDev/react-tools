import{r,j as c}from"./index-t7AdqrYD.js";const a=(t,f,n)=>{const s=r.useRef();(!s.current||!n||n(s.current,f))&&(s.current=f),r.useEffect(t,s.current)},u=()=>{const[t,f]=r.useState({id:0,name:"state"}),[n,s]=r.useState({effect:"",effectCompare:""});return r.useEffect(()=>(console.log("useEffect execution.."),s(e=>({...e,effect:`useEffect --> Current state is: id: ${t.id} - name: ${t.name}`})),()=>{console.log("useEffect clean up execution.."),s(e=>({...e,effect:""}))}),[t]),a(()=>(console.log("useEffectCompare execution.."),s(e=>({...e,effectCompare:`useEffectCompare --> Current state is: id: ${t.id} - name: ${t.name}`})),()=>{console.log("useEffectCompare clean up execution.."),s(e=>({...e,effectCompare:""}))}),[t],(e,o)=>e[0].name!==o[0].name),c.jsxs(c.Fragment,{children:[c.jsxs("p",{children:["Current state: id: ",t.id," - name: ",t.name]}),c.jsx("p",{children:n.effect}),c.jsx("p",{children:n.effectCompare}),c.jsx("button",{onClick:()=>f(e=>({...e,id:e.id+1})),children:"Increment"})]})};u.displayName="UseEffectCompare";export{u as UseEffectCompare};
