import{r as n,j as r}from"./index-l3csZOL-.js";const f=e=>typeof e=="function"&&e.constructor.name==="AsyncFunction"||typeof e=="object"&&typeof e.then=="function",m=(e,o)=>{const s=n.useRef(o),t=n.useRef(!1),l=n.useRef(),u=n.useCallback((...c)=>{if(!t.current)if(t.current=!0,s.current.delay)e(...c),l.current=setTimeout(()=>t.current=!1,s.current.delay);else if(s.current.waitFn){const a=e(...c);f(a)?a.finally(()=>t.current=!1):t.current=!1}else throw Error("useThrottled: options aren't setted correctly.")},[e]),i=n.useCallback(()=>{t.current=!1},[]),d=n.useCallback((...c)=>{t.current=!1,e(...c)},[e]);return[u,i,d]},h=()=>{const[e,o]=n.useState(0),[s,t,l]=m(n.useCallback(()=>new Promise(u=>setTimeout(()=>u(o(i=>i+1)),3e3)),[]),{waitFn:!0});return r.jsxs("div",{children:[r.jsxs("p",{children:["State is: ",e]}),r.jsxs("div",{style:{display:"grid",gridTemplateColumns:"auto auto auto",justifyContent:"center",gap:50},children:[r.jsx("button",{onClick:s,children:"Throttled increment"}),r.jsx("button",{onClick:l,children:"Immediatly increment"}),r.jsx("button",{onClick:t,children:"Cancel"})]})]})};export{h as UseThrottle};
