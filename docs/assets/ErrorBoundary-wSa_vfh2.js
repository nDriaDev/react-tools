var n=Object.defineProperty;var h=(s,e,r)=>e in s?n(s,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):s[e]=r;var i=(s,e,r)=>(h(s,typeof e!="symbol"?e+"":e,r),r);import{r as a,j as t}from"./index-x6YzwhPR.js";class l extends a.Component{constructor(){super(...arguments);i(this,"state",{hasError:!1})}static getDerivedStateFromError(r){return{hasError:!0,error:r}}componentDidCatch(r,o){this.props.onCatch&&this.props.onCatch(r,o),this.setState({hasError:!0,error:r,info:o})}retry(){this.setState({hasError:!1,error:void 0,info:void 0})}render(){if(this.state.hasError&&this.props.fallback){if(typeof this.props.fallback=="function")if(a.isValidElement(this.props.fallback)){const r=this.props.fallback;return t.jsx(r,{error:this.state.error,info:this.state.info,retry:this.retry.bind(this)})}else return t.jsx(t.Fragment,{children:this.props.fallback(this.state.error,this.state.info,this.retry.bind(this))});return t.jsx(t.Fragment,{children:this.props.fallback})}return this.props.children}}const c=()=>{throw new Error("An error occurred.")};function d(){return t.jsx(l,{fallback:(s,e,r)=>t.jsxs(t.Fragment,{children:[t.jsxs("p",{children:[s.name," - ",s.message," "]}),t.jsx("button",{onClick:r,children:"Retry"})]}),children:t.jsx(c,{})})}export{d as default};
