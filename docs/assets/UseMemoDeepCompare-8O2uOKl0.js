import{r as t,j as m}from"./index-gy_8fZHQ.js";import{i as d}from"./isDeepEqual-miY4iMQs.js";const u=(e,n)=>{const r=t.useRef();return(!r.current||!d(r.current,n))&&(r.current=n),t.useMemo(e,r.current)},c=()=>{const[e,n]=t.useState({id:0,name:"state"}),[r,s]=t.useState({memo:0,deepMemo:0}),a=t.useMemo(()=>(console.log("Render defaultMemo"),s(o=>({...o,memo:o.memo+1})),`useMemo: id:${e.id} - name:${e.name}`),[e]),p=u(()=>(console.log("Render memoDeepCompare"),s(o=>({...o,deepMemo:o.deepMemo+1})),`useMemoDeepCompare: id:${e.id} - name:${e.name}`),[e]);return m.jsxs(m.Fragment,{children:[m.jsxs("p",{children:["Current state: id: ",e.id," - name: ",e.name]}),m.jsxs("p",{children:[a,` ---> render: ${r.memo}`]}),m.jsxs("p",{children:[p,` ---> render: ${r.deepMemo}`]}),m.jsx("button",{onClick:()=>n(o=>({...o})),children:"Increment"})]})};c.displayName="UseMemoDeepCompare";export{c as UseMemoDeepCompare};
