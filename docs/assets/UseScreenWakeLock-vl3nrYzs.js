import{r as c,j as s}from"./index-LfmzCjXr.js";import{u as k}from"./useSyncExternalStore--wyZB9C7.js";const v=r=>{const t=c.useRef(),e=c.useRef(),u=c.useRef(n=>{r(n),t.current&&t.current()}),l=c.useRef(async()=>{navigator&&"wakeLock"in navigator&&(e.current=await navigator.wakeLock.request("screen"),r&&e.current.addEventListener("release",u.current),t.current&&t.current())}),p=c.useRef(async()=>{e.current&&(await e.current.release(),e.current.removeEventListener("release",u.current),e.current=void 0,t.current&&t.current())});return[k(c.useCallback(n=>(t.current=n,()=>{t.current=void 0}),[]),c.useMemo(()=>{let n={isSupported:!!navigator&&"wakeLock"in navigator,type:null,isActive:null};return()=>{const a=!!navigator&&"wakeLock"in navigator;let o=null,i=null;return e.current&&(o=e.current.type,i=!e.current.released),(a!==n.isSupported||o!==n.type||i!==n.isActive)&&(n={isSupported:a,type:o,isActive:i}),n}},[])),l.current,p.current]},y=()=>{const[r,t,e]=v();return s.jsxs(s.Fragment,{children:[s.jsxs("p",{children:["WakeLock API supported: ",r.isSupported?"Yes":"No"]}),s.jsxs("p",{children:["WakeLock type: ",r.type?r.type:"WakeLock not found."]}),s.jsxs("p",{children:["WakeLock active: ",r.isActive?"Yes":"No"]}),s.jsx("button",{type:"button",onClick:()=>{r.isActive?e():t()},disabled:!r.isSupported,children:r.isActive?"UnLock":"Lock"})]})};export{y as UseScreenWakeLock};
