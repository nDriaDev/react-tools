import{r as i,j as c}from"./index-tHW-mALI.js";import{u as a}from"./useEffectOnce-QgO8JBvO.js";import{i as p}from"./isDeepEqual-miY4iMQs.js";const n=[],u=(s,t)=>{const e=i.useRef(-1);a(()=>()=>{e.current!==-1&&n.splice(e.current,1),e.current=-1});for(const r of n)if(e.current=e.current+1,p([...t,String.raw`${s.toString()}`],r.deps)){if("error"in r)throw r.error;if("response"in r)return r.response;throw r.promise}const o={deps:[...t,String.raw`${s.toString()}`],promise:s().then(r=>{o.response=r}).catch(r=>{o.error=r})};throw n.push(o),o.promise},l=()=>{const s=u(()=>new Promise((t,e)=>{console.log("called"),setTimeout(()=>{Math.random()>.5?t([1,2,3,4,5]):e()},4e3)}).catch(()=>alert("Error throwed by promise")),[]);return c.jsx("pre",{children:JSON.stringify(s)})},d=()=>c.jsx(i.Suspense,{fallback:"loading...",children:c.jsx(l,{})});export{d as UsePromiseSuspensible};
