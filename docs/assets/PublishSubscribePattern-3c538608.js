var l=(t,s,e)=>{if(!s.has(t))throw TypeError("Cannot "+e)};var h=(t,s,e)=>(l(t,s,"read from private field"),e?e.call(t):s.get(t)),a=(t,s,e)=>{if(s.has(t))throw TypeError("Cannot add the same private member more than once");s instanceof WeakSet?s.add(t):s.set(t,e)},u=(t,s,e,r)=>(l(t,s,"write to private field"),r?r.call(t,e):s.set(t,e),e);var i;class f{constructor(){a(this,i,void 0);u(this,i,new Map)}subscribe(s,e){h(this,i).has(s)||h(this,i).set(s,[]);const r=h(this,i).get(s);r.push(e),h(this,i).set(s,r)}unsubscribe(s,e){if(!h(this,i).has(s))return!1;const r=h(this,i).get(s).filter(n=>n!==e);return h(this,i).set(s,r),!0}publish(s,e){(h(this,i).get(s)??[]).forEach(n=>n(e))}async publishAsync(s,e){const r=h(this,i).get(s)??[],n=[];r.forEach(c=>n.push(c(e))),await Promise.allSettled(n)}}i=new WeakMap;export{f as P};
