import{r as a,j as i}from"./index-gy_8fZHQ.js";import{u}from"./useEffectOnce-mM90F-3N.js";import{i as p}from"./isDeepEqual-miY4iMQs.js";const c=[],l=(e,t,o={clearCacheOnUnmount:!1})=>{const s=a.useRef(-1);u(()=>()=>{o.clearCacheOnUnmount&&(s.current!==-1&&c.splice(s.current,1),s.current=-1)});for(const r of c)if(s.current=s.current+1,p([...t,String.raw`${e.toString()}`],r.deps)){if("error"in r)throw r.error;if("response"in r)return r.response;throw r.promise}const n={deps:[...t,String.raw`${e.toString()}`],promise:e().then(r=>{n.response=r}).catch(r=>{n.error=r})};throw c.push(n),n.promise},m=()=>{const e=l(()=>new Promise((t,o)=>{console.log("called"),setTimeout(()=>{Math.random()>.5?t([1,2,3,4,5]):o()},4e3)}).catch(()=>alert("Error throwed by promise")),[]);return i.jsx("pre",{children:JSON.stringify(e)})},x=()=>i.jsx(a.Suspense,{fallback:"loading...",children:i.jsx(m,{})});export{x as UsePromiseSuspensible};
