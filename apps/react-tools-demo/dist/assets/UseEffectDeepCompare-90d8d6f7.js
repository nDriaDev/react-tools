import{r as n,j as s}from"./index-7b09dd01.js";import{i as c}from"./isDeepEqual-91d55382.js";const p=(r,o)=>{const e=n.useRef();(!e.current||!c(e.current,o))&&(e.current=o),n.useEffect(r,e.current)},a=()=>{const[r,o]=n.useState({id:0,name:"state"}),[e,m]=n.useState({memo:0,deepMemo:0});return n.useEffect(()=>{console.log("Render default useEffect"),m(t=>({...t,memo:t.memo+1}))},[r]),p(()=>{console.log("Render memoDeepCompare"),m(t=>({...t,deepMemo:t.deepMemo+1}))},[r]),s.jsxs(s.Fragment,{children:[s.jsxs("p",{children:["Current state: id: ",r.id," - name: ",r.name]}),s.jsxs("p",{children:["useEffect render: ",e.memo]}),s.jsxs("p",{children:["useEffectDeepCompare render: ",e.deepMemo]}),s.jsx("button",{onClick:()=>o(t=>({...t})),children:"Increment"})]})};a.displayName="UseEffectDeepCompare";export{a as UseEffectDeepCompare};
