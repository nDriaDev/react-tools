import{r as i,j as c}from"./index-5eafcd1e.js";import{u as a}from"./useEffectOnce-bbae9380.js";import{i as p}from"./isDeepEqual-91d55382.js";const n=[],u=(s,o)=>{const e=i.useRef(-1);a(()=>()=>{e.current!==-1&&n.splice(e.current,1),e.current=-1});for(const r of n)if(e.current=e.current+1,p([...o,s.toString()],r.deps)){if("error"in r)throw r.error;if("response"in r)return r.response;throw r.promise}const t={deps:[...o,s.toString()],promise:s().then(r=>{t.response=r}).catch(r=>{t.error=r})};throw n.push(t),t.promise},l=()=>{const s=u(()=>new Promise((o,e)=>{console.log("called"),setTimeout(()=>{Math.random()>.5?o([1,2,3,4,5]):e()},4e3)}).catch(()=>alert("Error throwed by promise")),[]);return c.jsx("pre",{children:JSON.stringify(s)})},d=()=>c.jsx(i.Suspense,{fallback:"loading...",children:c.jsx(l,{})});export{d as UsePromiseSuspensible};
